#include<iostream>
using namespace std;

struct queue{
    int size;
    int front;
    int rear;
    int *Q;
};

void create(queue *q, int size){
    q->size = size;
    q->front = q->rear = 0;
    q->Q = new int(size);
}

void enqueue(queue *q, int x){
    if((q->rear+1) % q->size == q->front){
        cout<<"Queue is Full..";
    }  
    else{
        q->rear = (q->rear+1) % q->size;
        q->Q[q->rear] = x;
    }
}

int dequeue(queue *q){
    int x = -1;
    if(q->front == q->rear){
        cout<<"Queue is empty..";
    }
    else{
        q->front = (q->front+1) % q->size;
        x = q->Q[q->front];
    }
    return x;
}

void display(queue q){
    int i = q.front+1;
    do{
        cout<<q.Q[i]<<" ";
        i = (i+1) % q.size;
    }while(i != (q.rear+1)%q.size);
    cout<<"\n";
}

int main(){
    queue q;
    create(&q, 5);

    enqueue(&q, 10);
    enqueue(&q, 20);
    enqueue(&q, 30);
    enqueue(&q, 40);
    enqueue(&q, 50);

    display(q);
    
    cout<<dequeue(&q)<<"\n";
    display(q);
    return 0;
}
