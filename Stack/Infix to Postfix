#include<iostream>
#include<stack>
using namespace std;

int prec(char c){
    if(c == '^'){
        return 3;
    }
    else if(c == '/' || c == '*'){
        return 2;
    }
    else if(c == '+' || c == '-'){
        return 1;
    }
    else{
        return -1;
    }
}
void infixToPostfix(string s){
    stack<char> st;
    string result;
    for(int i=0; i<s.length(); i++){
        char c = s[i];
        if(s[i] >= 'a' && s[i] <= 'z' || s[i] >= 'A' && s[i] <= 'Z' || s[i] >= '0' && s[i] <='9'){
            result += c;
        }
        else if(s[i] == '('){
            st.push('(');
        }
        else if(s[i] == ')'){
            while(st.top() != '('){
                result += st.top();
                st.pop();
            }
            st.pop();
        }
        else{
            while(!st.empty() && prec(s[i]) <= prec(st.top())){
                if(c == '^' && st.top() == '^'){
                    break;
                }
                else{
                    result += st.top();
                    st.pop();
                }
            }
            st.push(c);
        }
    }
    while(!st.empty()){
        result += st.top();
        st.pop();
    }
    cout<< result << endl;
}
int main(){
    string exp = "a+b*(c^d-e)^(f+g*h)-i";
    infixToPostfix(exp);
    return 0;
}
